/*
 * Finac API
 * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FinacApi);
  }
}(this, function(expect, FinacApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FinacApi.WalletApi();
  });

  describe('(package)', function() {
    describe('WalletApi', function() {
      describe('apiWalletIdPatch', function() {
        it('should call apiWalletIdPatch successfully', function(done) {
          // TODO: uncomment, update parameter values for apiWalletIdPatch call and complete the assertions
          /*
          var opts = {};

          instance.apiWalletIdPatch(id, apiVersion, authorization, fMessageId, fOrigin, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FinacApi.WalletSpendControlUpdateViewModelValidResponsePackage);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiWalletIdPost', function() {
        it('should call apiWalletIdPost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiWalletIdPost call and complete the assertions
          /*
          var opts = {};

          instance.apiWalletIdPost(id, apiVersion, authorization, fMessageId, fOrigin, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FinacApi.AccountWalletViewModelValidResponsePackage);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiWalletWalletSpendControlGroupGet', function() {
        it('should call apiWalletWalletSpendControlGroupGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiWalletWalletSpendControlGroupGet call and complete the assertions
          /*
          var opts = {};

          instance.apiWalletWalletSpendControlGroupGet(apiVersion, authorization, fMessageId, fOrigin, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FinacApi.WalletSpendControlGroupGetViewModelValidResponsePackage);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiWalletWalletSpendControlGroupPost', function() {
        it('should call apiWalletWalletSpendControlGroupPost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiWalletWalletSpendControlGroupPost call and complete the assertions
          /*
          var opts = {};

          instance.apiWalletWalletSpendControlGroupPost(apiVersion, authorization, fMessageId, fOrigin, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FinacApi.WalletSpendControlGroupInsertViewModelValidResponsePackage);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
