"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardV2ViewModel = void 0;
var _ApiClient = require("../ApiClient");
var _InquiryBalanceV2ViewModel = require("./InquiryBalanceV2ViewModel");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * Finac API
                                                                                                                                                                                                                                                                                                                                                                                               * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 2.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.43
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The CardV2ViewModel model module.
 * @module model/CardV2ViewModel
 * @version 2.0
 */
var CardV2ViewModel = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CardV2ViewModel</code>.
   * @alias module:model/CardV2ViewModel
   * @class
   */
  function CardV2ViewModel() {
    _classCallCheck(this, CardV2ViewModel);
  }

  /**
   * Constructs a <code>CardV2ViewModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CardV2ViewModel} obj Optional instance to populate.
   * @return {module:model/CardV2ViewModel} The populated <code>CardV2ViewModel</code> instance.
   */
  _createClass(CardV2ViewModel, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CardV2ViewModel();
        if (data.hasOwnProperty('accountBaseCurrency')) obj.accountBaseCurrency = _ApiClient.ApiClient.convertToType(data['accountBaseCurrency'], 'String');
        if (data.hasOwnProperty('cardType')) obj.cardType = _ApiClient.ApiClient.convertToType(data['cardType'], 'String');
        if (data.hasOwnProperty('accountNumber')) obj.accountNumber = _ApiClient.ApiClient.convertToType(data['accountNumber'], 'String');
        if (data.hasOwnProperty('bankRoutingNumber')) obj.bankRoutingNumber = _ApiClient.ApiClient.convertToType(data['bankRoutingNumber'], 'String');
        if (data.hasOwnProperty('cnid')) obj.cnid = _ApiClient.ApiClient.convertToType(data['cnid'], 'String');
        if (data.hasOwnProperty('cardStatus')) obj.cardStatus = _ApiClient.ApiClient.convertToType(data['cardStatus'], 'String');
        if (data.hasOwnProperty('pinTriesExceeded')) obj.pinTriesExceeded = _ApiClient.ApiClient.convertToType(data['pinTriesExceeded'], 'String');
        if (data.hasOwnProperty('badPinTries')) obj.badPinTries = _ApiClient.ApiClient.convertToType(data['badPinTries'], 'String');
        if (data.hasOwnProperty('expirationDate')) obj.expirationDate = _ApiClient.ApiClient.convertToType(data['expirationDate'], 'String');
        if (data.hasOwnProperty('cardEffectiveEnd')) obj.cardEffectiveEnd = _ApiClient.ApiClient.convertToType(data['cardEffectiveEnd'], 'String');
        if (data.hasOwnProperty('client')) obj.client = _ApiClient.ApiClient.convertToType(data['client'], 'String');
        if (data.hasOwnProperty('phoneCardNumber')) obj.phoneCardNumber = _ApiClient.ApiClient.convertToType(data['phoneCardNumber'], 'String');
        if (data.hasOwnProperty('distributorCode')) obj.distributorCode = _ApiClient.ApiClient.convertToType(data['distributorCode'], 'String');
        if (data.hasOwnProperty('companyName')) obj.companyName = _ApiClient.ApiClient.convertToType(data['companyName'], 'String');
        if (data.hasOwnProperty('cardStyle')) obj.cardStyle = _ApiClient.ApiClient.convertToType(data['cardStyle'], 'String');
        if (data.hasOwnProperty('deliveryType')) obj.deliveryType = _ApiClient.ApiClient.convertToType(data['deliveryType'], 'String');
        if (data.hasOwnProperty('initialLoadProcessed')) obj.initialLoadProcessed = _ApiClient.ApiClient.convertToType(data['initialLoadProcessed'], 'String');
        if (data.hasOwnProperty('loadAmount')) obj.loadAmount = _ApiClient.ApiClient.convertToType(data['loadAmount'], 'Number');
        if (data.hasOwnProperty('balance')) obj.balance = _InquiryBalanceV2ViewModel.InquiryBalanceV2ViewModel.constructFromObject(data['balance']);
        if (data.hasOwnProperty('elevatedStatus')) obj.elevatedStatus = _ApiClient.ApiClient.convertToType(data['elevatedStatus'], 'String');
        if (data.hasOwnProperty('cardNumber')) obj.cardNumber = _ApiClient.ApiClient.convertToType(data['cardNumber'], 'String');
        if (data.hasOwnProperty('walletId')) obj.walletId = _ApiClient.ApiClient.convertToType(data['walletId'], 'String');
      }
      return obj;
    }
  }]);
  return CardV2ViewModel;
}();
/**
 * @member {String} accountBaseCurrency
 */
exports.CardV2ViewModel = CardV2ViewModel;
CardV2ViewModel.prototype.accountBaseCurrency = undefined;

/**
 * @member {String} cardType
 */
CardV2ViewModel.prototype.cardType = undefined;

/**
 * @member {String} accountNumber
 */
CardV2ViewModel.prototype.accountNumber = undefined;

/**
 * @member {String} bankRoutingNumber
 */
CardV2ViewModel.prototype.bankRoutingNumber = undefined;

/**
 * @member {String} cnid
 */
CardV2ViewModel.prototype.cnid = undefined;

/**
 * @member {String} cardStatus
 */
CardV2ViewModel.prototype.cardStatus = undefined;

/**
 * @member {String} pinTriesExceeded
 */
CardV2ViewModel.prototype.pinTriesExceeded = undefined;

/**
 * @member {String} badPinTries
 */
CardV2ViewModel.prototype.badPinTries = undefined;

/**
 * @member {String} expirationDate
 */
CardV2ViewModel.prototype.expirationDate = undefined;

/**
 * @member {String} cardEffectiveEnd
 */
CardV2ViewModel.prototype.cardEffectiveEnd = undefined;

/**
 * @member {String} client
 */
CardV2ViewModel.prototype.client = undefined;

/**
 * @member {String} phoneCardNumber
 */
CardV2ViewModel.prototype.phoneCardNumber = undefined;

/**
 * @member {String} distributorCode
 */
CardV2ViewModel.prototype.distributorCode = undefined;

/**
 * @member {String} companyName
 */
CardV2ViewModel.prototype.companyName = undefined;

/**
 * @member {String} cardStyle
 */
CardV2ViewModel.prototype.cardStyle = undefined;

/**
 * @member {String} deliveryType
 */
CardV2ViewModel.prototype.deliveryType = undefined;

/**
 * @member {String} initialLoadProcessed
 */
CardV2ViewModel.prototype.initialLoadProcessed = undefined;

/**
 * @member {Number} loadAmount
 */
CardV2ViewModel.prototype.loadAmount = undefined;

/**
 * @member {module:model/InquiryBalanceV2ViewModel} balance
 */
CardV2ViewModel.prototype.balance = undefined;

/**
 * @member {String} elevatedStatus
 */
CardV2ViewModel.prototype.elevatedStatus = undefined;

/**
 * @member {String} cardNumber
 */
CardV2ViewModel.prototype.cardNumber = undefined;

/**
 * @member {String} walletId
 */
CardV2ViewModel.prototype.walletId = undefined;