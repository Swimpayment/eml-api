"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TokenUpdateBindingModel = void 0;
var _ApiClient = require("../ApiClient");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * Finac API
                                                                                                                                                                                                                                                                                                                                                                                               * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 2.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.42
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The TokenUpdateBindingModel model module.
 * @module model/TokenUpdateBindingModel
 * @version 2.0
 */
var TokenUpdateBindingModel = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>TokenUpdateBindingModel</code>.
   * @alias module:model/TokenUpdateBindingModel
   * @class
   */
  function TokenUpdateBindingModel() {
    _classCallCheck(this, TokenUpdateBindingModel);
  }

  /**
   * Constructs a <code>TokenUpdateBindingModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TokenUpdateBindingModel} obj Optional instance to populate.
   * @return {module:model/TokenUpdateBindingModel} The populated <code>TokenUpdateBindingModel</code> instance.
   */
  _createClass(TokenUpdateBindingModel, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new TokenUpdateBindingModel();
        if (data.hasOwnProperty('tokenUniqueReference')) obj.tokenUniqueReference = _ApiClient.ApiClient.convertToType(data['tokenUniqueReference'], 'String');
        if (data.hasOwnProperty('currentAccountPan')) obj.currentAccountPan = _ApiClient.ApiClient.convertToType(data['currentAccountPan'], 'String');
        if (data.hasOwnProperty('newAccountPan')) obj.newAccountPan = _ApiClient.ApiClient.convertToType(data['newAccountPan'], 'String');
        if (data.hasOwnProperty('expirationDate')) obj.expirationDate = _ApiClient.ApiClient.convertToType(data['expirationDate'], 'String');
        if (data.hasOwnProperty('accountPanSequenceNumber')) obj.accountPanSequenceNumber = _ApiClient.ApiClient.convertToType(data['accountPanSequenceNumber'], 'String');
        if (data.hasOwnProperty('issuerProductConfigurationId')) obj.issuerProductConfigurationId = _ApiClient.ApiClient.convertToType(data['issuerProductConfigurationId'], 'String');
        if (data.hasOwnProperty('updateWalletProviderIndicator')) obj.updateWalletProviderIndicator = _ApiClient.ApiClient.convertToType(data['updateWalletProviderIndicator'], 'String');
        if (data.hasOwnProperty('commentText')) obj.commentText = _ApiClient.ApiClient.convertToType(data['commentText'], 'String');
      }
      return obj;
    }
  }]);
  return TokenUpdateBindingModel;
}();
/**
 * Unique reference of the token to be updated. Conditional field, used for updating a single token and not used when CurrentAccountPan is present.
 * @member {String} tokenUniqueReference
 */
exports.TokenUpdateBindingModel = TokenUpdateBindingModel;
TokenUpdateBindingModel.prototype.tokenUniqueReference = undefined;

/**
 * Current Account PAN of the token(s) to be updated. Conditional field, used for updating all tokens mapped to a single Account PAN and must not be present when TokenUniqueReference is present.
 * @member {String} currentAccountPan
 */
TokenUpdateBindingModel.prototype.currentAccountPan = undefined;

/**
 * New Account PAN to be applied to the updated token(s) if there is in fact a new Account PAN. Optional if updating Expiration Date or PAN Sequence Number.
 * @member {String} newAccountPan
 */
TokenUpdateBindingModel.prototype.newAccountPan = undefined;

/**
 * New Account PAN expiration date. Conditional field, must not be present when IssuerProductConfigurationId is present. Optional if updating PAN mapping or PAN Sequence Number.
 * @member {String} expirationDate
 */
TokenUpdateBindingModel.prototype.expirationDate = undefined;

/**
 * New PAN sequence number to be applied to the updated token(s). Conditional field, must not be present when IssuerProductConfigurationId is present. Optional if updating PAN mapping or Expiration Date.
 * @member {String} accountPanSequenceNumber
 */
TokenUpdateBindingModel.prototype.accountPanSequenceNumber = undefined;

/**
 * New product configuration ID to be applied to the updated token(s). Conditional field, must not be present if any of the following are present - NewAccountPan, ExpirationDate, AccountPanSequenceNumber.
 * @member {String} issuerProductConfigurationId
 */
TokenUpdateBindingModel.prototype.issuerProductConfigurationId = undefined;

/**
 * Indicates whether the updated token information should be provided to the Wallet Provider. Valid values: \"0\" - Pass the updated information to the Wallet Provider. \"1\" - Do not pass the updated information to the Wallet Provider. Optional parameter.The default is 1 if not present.
 * @member {String} updateWalletProviderIndicator
 */
TokenUpdateBindingModel.prototype.updateWalletProviderIndicator = undefined;

/**
 * Comment related to the updated token(s). Example: Update gold artwork
 * @member {String} commentText
 */
TokenUpdateBindingModel.prototype.commentText = undefined;