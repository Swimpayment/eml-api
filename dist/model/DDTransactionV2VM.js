"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DDTransactionV2VM = void 0;
var _ApiClient = require("../ApiClient");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * Finac API
                                                                                                                                                                                                                                                                                                                                                                                               * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 2.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.42
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The DDTransactionV2VM model module.
 * @module model/DDTransactionV2VM
 * @version 2.0
 */
var DDTransactionV2VM = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>DDTransactionV2VM</code>.
   * @alias module:model/DDTransactionV2VM
   * @class
   */
  function DDTransactionV2VM() {
    _classCallCheck(this, DDTransactionV2VM);
  }

  /**
   * Constructs a <code>DDTransactionV2VM</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DDTransactionV2VM} obj Optional instance to populate.
   * @return {module:model/DDTransactionV2VM} The populated <code>DDTransactionV2VM</code> instance.
   */
  _createClass(DDTransactionV2VM, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new DDTransactionV2VM();
        if (data.hasOwnProperty('endToEndId')) obj.endToEndId = _ApiClient.ApiClient.convertToType(data['endToEndId'], 'String');
        if (data.hasOwnProperty('instructionId')) obj.instructionId = _ApiClient.ApiClient.convertToType(data['instructionId'], 'String');
        if (data.hasOwnProperty('transactionId')) obj.transactionId = _ApiClient.ApiClient.convertToType(data['transactionId'], 'String');
        if (data.hasOwnProperty('mandate')) obj.mandate = _ApiClient.ApiClient.convertToType(data['mandate'], 'String');
        if (data.hasOwnProperty('mandateId')) obj.mandateId = _ApiClient.ApiClient.convertToType(data['mandateId'], 'Number');
        if (data.hasOwnProperty('dateOfSignature')) obj.dateOfSignature = _ApiClient.ApiClient.convertToType(data['dateOfSignature'], 'String');
        if (data.hasOwnProperty('amount')) obj.amount = _ApiClient.ApiClient.convertToType(data['amount'], 'Number');
        if (data.hasOwnProperty('requiredDateTime')) obj.requiredDateTime = _ApiClient.ApiClient.convertToType(data['requiredDateTime'], 'String');
        if (data.hasOwnProperty('reference')) obj.reference = _ApiClient.ApiClient.convertToType(data['reference'], 'String');
        if (data.hasOwnProperty('debtorFullName')) obj.debtorFullName = _ApiClient.ApiClient.convertToType(data['debtorFullName'], 'String');
        if (data.hasOwnProperty('debtorIban')) obj.debtorIban = _ApiClient.ApiClient.convertToType(data['debtorIban'], 'String');
        if (data.hasOwnProperty('debtorBic')) obj.debtorBic = _ApiClient.ApiClient.convertToType(data['debtorBic'], 'String');
        if (data.hasOwnProperty('debtorPostalAddress')) obj.debtorPostalAddress = _ApiClient.ApiClient.convertToType(data['debtorPostalAddress'], 'String');
        if (data.hasOwnProperty('debtorCountry')) obj.debtorCountry = _ApiClient.ApiClient.convertToType(data['debtorCountry'], 'String');
        if (data.hasOwnProperty('creditorFullName')) obj.creditorFullName = _ApiClient.ApiClient.convertToType(data['creditorFullName'], 'String');
        if (data.hasOwnProperty('creditorIban')) obj.creditorIban = _ApiClient.ApiClient.convertToType(data['creditorIban'], 'String');
        if (data.hasOwnProperty('creditorBic')) obj.creditorBic = _ApiClient.ApiClient.convertToType(data['creditorBic'], 'String');
        if (data.hasOwnProperty('creditorPostalAddress')) obj.creditorPostalAddress = _ApiClient.ApiClient.convertToType(data['creditorPostalAddress'], 'String');
        if (data.hasOwnProperty('creditorCountry')) obj.creditorCountry = _ApiClient.ApiClient.convertToType(data['creditorCountry'], 'String');
        if (data.hasOwnProperty('id')) obj.id = _ApiClient.ApiClient.convertToType(data['id'], 'Number');
        if (data.hasOwnProperty('errorCode')) obj.errorCode = _ApiClient.ApiClient.convertToType(data['errorCode'], 'String');
        if (data.hasOwnProperty('incomingOutgoing')) obj.incomingOutgoing = _ApiClient.ApiClient.convertToType(data['incomingOutgoing'], 'String');
        if (data.hasOwnProperty('statusFlag')) obj.statusFlag = _ApiClient.ApiClient.convertToType(data['statusFlag'], 'String');
      }
      return obj;
    }
  }]);
  return DDTransactionV2VM;
}();
/**
 * @member {String} endToEndId
 */
exports.DDTransactionV2VM = DDTransactionV2VM;
DDTransactionV2VM.prototype.endToEndId = undefined;

/**
 * @member {String} instructionId
 */
DDTransactionV2VM.prototype.instructionId = undefined;

/**
 * @member {String} transactionId
 */
DDTransactionV2VM.prototype.transactionId = undefined;

/**
 * @member {String} mandate
 */
DDTransactionV2VM.prototype.mandate = undefined;

/**
 * @member {Number} mandateId
 */
DDTransactionV2VM.prototype.mandateId = undefined;

/**
 * @member {String} dateOfSignature
 */
DDTransactionV2VM.prototype.dateOfSignature = undefined;

/**
 * @member {Number} amount
 */
DDTransactionV2VM.prototype.amount = undefined;

/**
 * @member {String} requiredDateTime
 */
DDTransactionV2VM.prototype.requiredDateTime = undefined;

/**
 * @member {String} reference
 */
DDTransactionV2VM.prototype.reference = undefined;

/**
 * @member {String} debtorFullName
 */
DDTransactionV2VM.prototype.debtorFullName = undefined;

/**
 * @member {String} debtorIban
 */
DDTransactionV2VM.prototype.debtorIban = undefined;

/**
 * @member {String} debtorBic
 */
DDTransactionV2VM.prototype.debtorBic = undefined;

/**
 * @member {String} debtorPostalAddress
 */
DDTransactionV2VM.prototype.debtorPostalAddress = undefined;

/**
 * @member {String} debtorCountry
 */
DDTransactionV2VM.prototype.debtorCountry = undefined;

/**
 * @member {String} creditorFullName
 */
DDTransactionV2VM.prototype.creditorFullName = undefined;

/**
 * @member {String} creditorIban
 */
DDTransactionV2VM.prototype.creditorIban = undefined;

/**
 * @member {String} creditorBic
 */
DDTransactionV2VM.prototype.creditorBic = undefined;

/**
 * @member {String} creditorPostalAddress
 */
DDTransactionV2VM.prototype.creditorPostalAddress = undefined;

/**
 * @member {String} creditorCountry
 */
DDTransactionV2VM.prototype.creditorCountry = undefined;

/**
 * @member {Number} id
 */
DDTransactionV2VM.prototype.id = undefined;

/**
 * @member {String} errorCode
 */
DDTransactionV2VM.prototype.errorCode = undefined;

/**
 * @member {String} incomingOutgoing
 */
DDTransactionV2VM.prototype.incomingOutgoing = undefined;

/**
 * @member {String} statusFlag
 */
DDTransactionV2VM.prototype.statusFlag = undefined;