/*
 * Finac API
 * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.43
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The CheckLoadViewModelV2 model module.
 * @module model/CheckLoadViewModelV2
 * @version 2.0
 */
export class CheckLoadViewModelV2 {
  /**
   * Constructs a new <code>CheckLoadViewModelV2</code>.
   * @alias module:model/CheckLoadViewModelV2
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>CheckLoadViewModelV2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CheckLoadViewModelV2} obj Optional instance to populate.
   * @return {module:model/CheckLoadViewModelV2} The populated <code>CheckLoadViewModelV2</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CheckLoadViewModelV2();
      if (data.hasOwnProperty('availableBalance'))
        obj.availableBalance = ApiClient.convertToType(data['availableBalance'], 'Number');
      if (data.hasOwnProperty('maxLoadPerDay'))
        obj.maxLoadPerDay = ApiClient.convertToType(data['maxLoadPerDay'], 'Number');
      if (data.hasOwnProperty('maxBalanceOnCard'))
        obj.maxBalanceOnCard = ApiClient.convertToType(data['maxBalanceOnCard'], 'Number');
      if (data.hasOwnProperty('loadAmountAsToday'))
        obj.loadAmountAsToday = ApiClient.convertToType(data['loadAmountAsToday'], 'Number');
      if (data.hasOwnProperty('yearlyLoad'))
        obj.yearlyLoad = ApiClient.convertToType(data['yearlyLoad'], 'Number');
      if (data.hasOwnProperty('yearlyLoadLimit'))
        obj.yearlyLoadLimit = ApiClient.convertToType(data['yearlyLoadLimit'], 'Number');
      if (data.hasOwnProperty('monthlyLoad'))
        obj.monthlyLoad = ApiClient.convertToType(data['monthlyLoad'], 'Number');
      if (data.hasOwnProperty('monthlyLoadLimit'))
        obj.monthlyLoadLimit = ApiClient.convertToType(data['monthlyLoadLimit'], 'Number');
      if (data.hasOwnProperty('maxRemainingLoad'))
        obj.maxRemainingLoad = ApiClient.convertToType(data['maxRemainingLoad'], 'Number');
      if (data.hasOwnProperty('loadTriesAsToday'))
        obj.loadTriesAsToday = ApiClient.convertToType(data['loadTriesAsToday'], 'Number');
      if (data.hasOwnProperty('maxLoadTriesPerDay'))
        obj.maxLoadTriesPerDay = ApiClient.convertToType(data['maxLoadTriesPerDay'], 'Number');
      if (data.hasOwnProperty('remainingTries'))
        obj.remainingTries = ApiClient.convertToType(data['remainingTries'], 'Number');
    }
    return obj;
  }
}

/**
 * Available balance on card
 * @member {Number} availableBalance
 */
CheckLoadViewModelV2.prototype.availableBalance = undefined;

/**
 * Maximum loads per day
 * @member {Number} maxLoadPerDay
 */
CheckLoadViewModelV2.prototype.maxLoadPerDay = undefined;

/**
 * Maximum balance that can be loaded to card
 * @member {Number} maxBalanceOnCard
 */
CheckLoadViewModelV2.prototype.maxBalanceOnCard = undefined;

/**
 * Total loaded amount today
 * @member {Number} loadAmountAsToday
 */
CheckLoadViewModelV2.prototype.loadAmountAsToday = undefined;

/**
 * Total load in a year
 * @member {Number} yearlyLoad
 */
CheckLoadViewModelV2.prototype.yearlyLoad = undefined;

/**
 * Yearly load limit
 * @member {Number} yearlyLoadLimit
 */
CheckLoadViewModelV2.prototype.yearlyLoadLimit = undefined;

/**
 * Total load in a month
 * @member {Number} monthlyLoad
 */
CheckLoadViewModelV2.prototype.monthlyLoad = undefined;

/**
 * Monthly load limit
 * @member {Number} monthlyLoadLimit
 */
CheckLoadViewModelV2.prototype.monthlyLoadLimit = undefined;

/**
 * Maximum remaining load possible
 * @member {Number} maxRemainingLoad
 */
CheckLoadViewModelV2.prototype.maxRemainingLoad = undefined;

/**
 * The load tries today
 * @member {Number} loadTriesAsToday
 */
CheckLoadViewModelV2.prototype.loadTriesAsToday = undefined;

/**
 * Maximum load tries limit per day
 * @member {Number} maxLoadTriesPerDay
 */
CheckLoadViewModelV2.prototype.maxLoadTriesPerDay = undefined;

/**
 * Remaining load tries possible
 * @member {Number} remainingTries
 */
CheckLoadViewModelV2.prototype.remainingTries = undefined;

