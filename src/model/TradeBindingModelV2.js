/*
 * Finac API
 * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.43
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {FundsSource} from './FundsSource';

/**
 * The TradeBindingModelV2 model module.
 * @module model/TradeBindingModelV2
 * @version 2.0
 */
export class TradeBindingModelV2 {
  /**
   * Constructs a new <code>TradeBindingModelV2</code>.
   * @alias module:model/TradeBindingModelV2
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TradeBindingModelV2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TradeBindingModelV2} obj Optional instance to populate.
   * @return {module:model/TradeBindingModelV2} The populated <code>TradeBindingModelV2</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TradeBindingModelV2();
      if (data.hasOwnProperty('toId'))
        obj.toId = ApiClient.convertToType(data['toId'], 'String');
      if (data.hasOwnProperty('fromSourceType'))
        obj.fromSourceType = FundsSource.constructFromObject(data['fromSourceType']);
      if (data.hasOwnProperty('toSourceType'))
        obj.toSourceType = FundsSource.constructFromObject(data['toSourceType']);
      if (data.hasOwnProperty('fromAmount'))
        obj.fromAmount = ApiClient.convertToType(data['fromAmount'], 'Number');
      if (data.hasOwnProperty('toAmount'))
        obj.toAmount = ApiClient.convertToType(data['toAmount'], 'Number');
      if (data.hasOwnProperty('fromCurrencyCode'))
        obj.fromCurrencyCode = ApiClient.convertToType(data['fromCurrencyCode'], 'String');
      if (data.hasOwnProperty('toCurrencyCode'))
        obj.toCurrencyCode = ApiClient.convertToType(data['toCurrencyCode'], 'String');
      if (data.hasOwnProperty('conversionRate'))
        obj.conversionRate = ApiClient.convertToType(data['conversionRate'], 'Number');
      if (data.hasOwnProperty('feeCode'))
        obj.feeCode = ApiClient.convertToType(data['feeCode'], 'String');
      if (data.hasOwnProperty('corporateId'))
        obj.corporateId = ApiClient.convertToType(data['corporateId'], 'Number');
      if (data.hasOwnProperty('userDefined'))
        obj.userDefined = ApiClient.convertToType(data['userDefined'], {'String': 'String'});
      if (data.hasOwnProperty('walletTransactionDescription'))
        obj.walletTransactionDescription = ApiClient.convertToType(data['walletTransactionDescription'], 'String');
      if (data.hasOwnProperty('accountTransactionDescription'))
        obj.accountTransactionDescription = ApiClient.convertToType(data['accountTransactionDescription'], 'String');
    }
    return obj;
  }
}

/**
 * To cardholder id
 * @member {String} toId
 */
TradeBindingModelV2.prototype.toId = undefined;

/**
 * @member {module:model/FundsSource} fromSourceType
 */
TradeBindingModelV2.prototype.fromSourceType = undefined;

/**
 * @member {module:model/FundsSource} toSourceType
 */
TradeBindingModelV2.prototype.toSourceType = undefined;

/**
 * From amount to trade
 * @member {Number} fromAmount
 */
TradeBindingModelV2.prototype.fromAmount = undefined;

/**
 * To amount to trade
 * @member {Number} toAmount
 */
TradeBindingModelV2.prototype.toAmount = undefined;

/**
 * From currency code, ISO-4217 3 letters
 * @member {String} fromCurrencyCode
 */
TradeBindingModelV2.prototype.fromCurrencyCode = undefined;

/**
 * To currency code, ISO-4217 3 letters
 * @member {String} toCurrencyCode
 */
TradeBindingModelV2.prototype.toCurrencyCode = undefined;

/**
 * Conversion rate
 * @member {Number} conversionRate
 */
TradeBindingModelV2.prototype.conversionRate = undefined;

/**
 * Fee code
 * @member {String} feeCode
 */
TradeBindingModelV2.prototype.feeCode = undefined;

/**
 * @member {Number} corporateId
 */
TradeBindingModelV2.prototype.corporateId = undefined;

/**
 * Open entry dictionary of user defined
 * @member {Object.<String, String>} userDefined
 */
TradeBindingModelV2.prototype.userDefined = undefined;

/**
 * @member {String} walletTransactionDescription
 */
TradeBindingModelV2.prototype.walletTransactionDescription = undefined;

/**
 * @member {String} accountTransactionDescription
 */
TradeBindingModelV2.prototype.accountTransactionDescription = undefined;

