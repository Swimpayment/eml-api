/*
 * Finac API
 * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.43
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {UserRegistrationType} from './UserRegistrationType';

/**
 * The AllowRegistrationBindingModel model module.
 * @module model/AllowRegistrationBindingModel
 * @version 2.0
 */
export class AllowRegistrationBindingModel {
  /**
   * Constructs a new <code>AllowRegistrationBindingModel</code>.
   * @alias module:model/AllowRegistrationBindingModel
   * @class
   * @param bin {String} Assigned by PFS. It is the first 8 digits of the cards on your program.
   * @param distributorCode {String} The unique identifier assigned by PFS, to your program.
   */
  constructor(bin, distributorCode) {
    this.bin = bin;
    this.distributorCode = distributorCode;
  }

  /**
   * Constructs a <code>AllowRegistrationBindingModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AllowRegistrationBindingModel} obj Optional instance to populate.
   * @return {module:model/AllowRegistrationBindingModel} The populated <code>AllowRegistrationBindingModel</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AllowRegistrationBindingModel();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('issuingId'))
        obj.issuingId = ApiClient.convertToType(data['issuingId'], 'Number');
      if (data.hasOwnProperty('bin'))
        obj.bin = ApiClient.convertToType(data['bin'], 'String');
      if (data.hasOwnProperty('distributorCode'))
        obj.distributorCode = ApiClient.convertToType(data['distributorCode'], 'String');
      if (data.hasOwnProperty('dateOfBirth'))
        obj.dateOfBirth = ApiClient.convertToType(data['dateOfBirth'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('lastName'))
        obj.lastName = ApiClient.convertToType(data['lastName'], 'String');
      if (data.hasOwnProperty('mobile'))
        obj.mobile = ApiClient.convertToType(data['mobile'], 'String');
      if (data.hasOwnProperty('address1'))
        obj.address1 = ApiClient.convertToType(data['address1'], 'String');
      if (data.hasOwnProperty('address2'))
        obj.address2 = ApiClient.convertToType(data['address2'], 'String');
      if (data.hasOwnProperty('address3'))
        obj.address3 = ApiClient.convertToType(data['address3'], 'String');
      if (data.hasOwnProperty('address4'))
        obj.address4 = ApiClient.convertToType(data['address4'], 'String');
      if (data.hasOwnProperty('postCode'))
        obj.postCode = ApiClient.convertToType(data['postCode'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('countryCode'))
        obj.countryCode = ApiClient.convertToType(data['countryCode'], 'String');
      if (data.hasOwnProperty('registrationType'))
        obj.registrationType = UserRegistrationType.constructFromObject(data['registrationType']);
      if (data.hasOwnProperty('documentNumber'))
        obj.documentNumber = ApiClient.convertToType(data['documentNumber'], 'String');
      if (data.hasOwnProperty('documentType'))
        obj.documentType = ApiClient.convertToType(data['documentType'], 'String');
      if (data.hasOwnProperty('documentExpiryDate'))
        obj.documentExpiryDate = ApiClient.convertToType(data['documentExpiryDate'], 'String');
      if (data.hasOwnProperty('countryOfIssuance'))
        obj.countryOfIssuance = ApiClient.convertToType(data['countryOfIssuance'], 'String');
      if (data.hasOwnProperty('phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
    }
    return obj;
  }
}

/**
 * Cardholder id.
 * @member {String} id
 */
AllowRegistrationBindingModel.prototype.id = undefined;

/**
 * Id from issue log.
 * @member {Number} issuingId
 */
AllowRegistrationBindingModel.prototype.issuingId = undefined;

/**
 * Assigned by PFS. It is the first 8 digits of the cards on your program.
 * @member {String} bin
 */
AllowRegistrationBindingModel.prototype.bin = undefined;

/**
 * The unique identifier assigned by PFS, to your program.
 * @member {String} distributorCode
 */
AllowRegistrationBindingModel.prototype.distributorCode = undefined;

/**
 * Date of birth of cardholder, in \"yyyy-MM-dd\" format.
 * @member {String} dateOfBirth
 */
AllowRegistrationBindingModel.prototype.dateOfBirth = undefined;

/**
 * Cardholder email address.
 * @member {String} email
 */
AllowRegistrationBindingModel.prototype.email = undefined;

/**
 * First name of cardholder.
 * @member {String} firstName
 */
AllowRegistrationBindingModel.prototype.firstName = undefined;

/**
 * Last name of cardholder.
 * @member {String} lastName
 */
AllowRegistrationBindingModel.prototype.lastName = undefined;

/**
 * Cardholder mobile number. Mobile number dial code can also be added by separating mobile number and dial code with a |.
 * @member {String} mobile
 */
AllowRegistrationBindingModel.prototype.mobile = undefined;

/**
 * First line of cardholder address.
 * @member {String} address1
 */
AllowRegistrationBindingModel.prototype.address1 = undefined;

/**
 * Second line of cardholder address.
 * @member {String} address2
 */
AllowRegistrationBindingModel.prototype.address2 = undefined;

/**
 * Third line of cardholder address.
 * @member {String} address3
 */
AllowRegistrationBindingModel.prototype.address3 = undefined;

/**
 * Fourth line of cardholder address.
 * @member {String} address4
 */
AllowRegistrationBindingModel.prototype.address4 = undefined;

/**
 * Post code of cardholder.
 * @member {String} postCode
 */
AllowRegistrationBindingModel.prototype.postCode = undefined;

/**
 * City of cardholder address.
 * @member {String} city
 */
AllowRegistrationBindingModel.prototype.city = undefined;

/**
 * Country code of cardholder address.
 * @member {String} countryCode
 */
AllowRegistrationBindingModel.prototype.countryCode = undefined;

/**
 * @member {module:model/UserRegistrationType} registrationType
 */
AllowRegistrationBindingModel.prototype.registrationType = undefined;

/**
 * Document number must be empty if the document details are not enabled. (if it is not applicable to your program)
 * @member {String} documentNumber
 */
AllowRegistrationBindingModel.prototype.documentNumber = undefined;

/**
 * Document type must be empty if the document details are not enabled. (if it is not applicable to your program)
 * @member {String} documentType
 */
AllowRegistrationBindingModel.prototype.documentType = undefined;

/**
 * Document expiry date must be empty if the document details are not enabled. (if it is not applicable to your program) When used the following formats are accepted: \"yyyy-MM-dd\", \"yyyy/MM/dd\", \"dd-MM-yyyy\", \"dd/MM/yyyy\".
 * @member {String} documentExpiryDate
 */
AllowRegistrationBindingModel.prototype.documentExpiryDate = undefined;

/**
 * Country of issuance in regulation with ISO 3166-1 alpha-2. Must be empty if the document details are not enabled. (if it is not applicable to your program)
 * @member {String} countryOfIssuance
 */
AllowRegistrationBindingModel.prototype.countryOfIssuance = undefined;

/**
 * Land line of cardholder. Landline dial code can also be added by separating landline and dial code with a |.
 * @member {String} phone
 */
AllowRegistrationBindingModel.prototype.phone = undefined;

