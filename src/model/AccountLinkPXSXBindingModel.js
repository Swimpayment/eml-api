/*
 * Finac API
 * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.43
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The AccountLinkPXSXBindingModel model module.
 * @module model/AccountLinkPXSXBindingModel
 * @version 2.0
 */
export class AccountLinkPXSXBindingModel {
  /**
   * Constructs a new <code>AccountLinkPXSXBindingModel</code>.
   * Request model for issuing a new cardholder.
   * @alias module:model/AccountLinkPXSXBindingModel
   * @class
   * @param id {String} Cardholder ID
   * @param secondaryId {String} Secondary Cardholder ID
   */
  constructor(id, secondaryId) {
    this.id = id;
    this.secondaryId = secondaryId;
  }

  /**
   * Constructs a <code>AccountLinkPXSXBindingModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountLinkPXSXBindingModel} obj Optional instance to populate.
   * @return {module:model/AccountLinkPXSXBindingModel} The populated <code>AccountLinkPXSXBindingModel</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AccountLinkPXSXBindingModel();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('secondaryId'))
        obj.secondaryId = ApiClient.convertToType(data['secondaryId'], 'String');
      if (data.hasOwnProperty('validateOnly'))
        obj.validateOnly = ApiClient.convertToType(data['validateOnly'], 'Boolean');
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('lastName'))
        obj.lastName = ApiClient.convertToType(data['lastName'], 'String');
      if (data.hasOwnProperty('dob'))
        obj.dob = ApiClient.convertToType(data['dob'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
      if (data.hasOwnProperty('mobileNo'))
        obj.mobileNo = ApiClient.convertToType(data['mobileNo'], 'String');
      if (data.hasOwnProperty('address1'))
        obj.address1 = ApiClient.convertToType(data['address1'], 'String');
      if (data.hasOwnProperty('address2'))
        obj.address2 = ApiClient.convertToType(data['address2'], 'String');
      if (data.hasOwnProperty('address3'))
        obj.address3 = ApiClient.convertToType(data['address3'], 'String');
      if (data.hasOwnProperty('postCode'))
        obj.postCode = ApiClient.convertToType(data['postCode'], 'String');
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (data.hasOwnProperty('isSecondaryAccountDetailsCustom'))
        obj.isSecondaryAccountDetailsCustom = ApiClient.convertToType(data['isSecondaryAccountDetailsCustom'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Cardholder ID
 * @member {String} id
 */
AccountLinkPXSXBindingModel.prototype.id = undefined;

/**
 * Secondary Cardholder ID
 * @member {String} secondaryId
 */
AccountLinkPXSXBindingModel.prototype.secondaryId = undefined;

/**
 * If 'True' checks if the two accounts can be linked.  If 'False', will attempt to link the two accounts.The default value is false.
 * @member {Boolean} validateOnly
 */
AccountLinkPXSXBindingModel.prototype.validateOnly = undefined;

/**
 * First name of the Cardholder
 * @member {String} firstName
 */
AccountLinkPXSXBindingModel.prototype.firstName = undefined;

/**
 * Last name of the Cardholder
 * @member {String} lastName
 */
AccountLinkPXSXBindingModel.prototype.lastName = undefined;

/**
 * Date of Birth \"yyyy-MM-dd\"
 * @member {String} dob
 */
AccountLinkPXSXBindingModel.prototype.dob = undefined;

/**
 * Email
 * @member {String} email
 */
AccountLinkPXSXBindingModel.prototype.email = undefined;

/**
 * Home Phone Number
 * @member {String} phone
 */
AccountLinkPXSXBindingModel.prototype.phone = undefined;

/**
 * Mobile Number
 * @member {String} mobileNo
 */
AccountLinkPXSXBindingModel.prototype.mobileNo = undefined;

/**
 * Address line 1
 * @member {String} address1
 */
AccountLinkPXSXBindingModel.prototype.address1 = undefined;

/**
 * Address line 2
 * @member {String} address2
 */
AccountLinkPXSXBindingModel.prototype.address2 = undefined;

/**
 * Address line 3
 * @member {String} address3
 */
AccountLinkPXSXBindingModel.prototype.address3 = undefined;

/**
 * Post Code
 * @member {String} postCode
 */
AccountLinkPXSXBindingModel.prototype.postCode = undefined;

/**
 * Country code ISO 1366-1, 3 character long country code
 * @member {String} country
 */
AccountLinkPXSXBindingModel.prototype.country = undefined;

/**
 * If 'True' the details of the secondary card will be overwritten with the data entered in the remaining fields.   If 'False' the data on the secondary card will not be altered
 * @member {Boolean} isSecondaryAccountDetailsCustom
 */
AccountLinkPXSXBindingModel.prototype.isSecondaryAccountDetailsCustom = undefined;

