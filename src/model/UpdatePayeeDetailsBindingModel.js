/*
 * Finac API
 * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.43
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {BankPaymentCreditorType} from './BankPaymentCreditorType';

/**
 * The UpdatePayeeDetailsBindingModel model module.
 * @module model/UpdatePayeeDetailsBindingModel
 * @version 2.0
 */
export class UpdatePayeeDetailsBindingModel {
  /**
   * Constructs a new <code>UpdatePayeeDetailsBindingModel</code>.
   * @alias module:model/UpdatePayeeDetailsBindingModel
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>UpdatePayeeDetailsBindingModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdatePayeeDetailsBindingModel} obj Optional instance to populate.
   * @return {module:model/UpdatePayeeDetailsBindingModel} The populated <code>UpdatePayeeDetailsBindingModel</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UpdatePayeeDetailsBindingModel();
      if (data.hasOwnProperty('creditorBankIdentifier'))
        obj.creditorBankIdentifier = ApiClient.convertToType(data['creditorBankIdentifier'], 'String');
      if (data.hasOwnProperty('creditorAccountIdentifier'))
        obj.creditorAccountIdentifier = ApiClient.convertToType(data['creditorAccountIdentifier'], 'String');
      if (data.hasOwnProperty('creditorCountryCode'))
        obj.creditorCountryCode = ApiClient.convertToType(data['creditorCountryCode'], 'String');
      if (data.hasOwnProperty('currency'))
        obj.currency = ApiClient.convertToType(data['currency'], 'String');
      if (data.hasOwnProperty('creditorAddress1'))
        obj.creditorAddress1 = ApiClient.convertToType(data['creditorAddress1'], 'String');
      if (data.hasOwnProperty('creditorAddress2'))
        obj.creditorAddress2 = ApiClient.convertToType(data['creditorAddress2'], 'String');
      if (data.hasOwnProperty('creditorcity'))
        obj.creditorcity = ApiClient.convertToType(data['creditorcity'], 'String');
      if (data.hasOwnProperty('creditorPostcode'))
        obj.creditorPostcode = ApiClient.convertToType(data['creditorPostcode'], 'String');
      if (data.hasOwnProperty('creditorState'))
        obj.creditorState = ApiClient.convertToType(data['creditorState'], 'String');
      if (data.hasOwnProperty('creditorFirstName'))
        obj.creditorFirstName = ApiClient.convertToType(data['creditorFirstName'], 'String');
      if (data.hasOwnProperty('creditorLastName'))
        obj.creditorLastName = ApiClient.convertToType(data['creditorLastName'], 'String');
      if (data.hasOwnProperty('creditorType'))
        obj.creditorType = BankPaymentCreditorType.constructFromObject(data['creditorType']);
      if (data.hasOwnProperty('isInstant'))
        obj.isInstant = ApiClient.convertToType(data['isInstant'], 'Boolean');
      if (data.hasOwnProperty('bankIdentifier'))
        obj.bankIdentifier = ApiClient.convertToType(data['bankIdentifier'], 'String');
      if (data.hasOwnProperty('bankIdentifier2'))
        obj.bankIdentifier2 = ApiClient.convertToType(data['bankIdentifier2'], 'String');
      if (data.hasOwnProperty('paymentScheme'))
        obj.paymentScheme = ApiClient.convertToType(data['paymentScheme'], 'Number');
      if (data.hasOwnProperty('creditorDateOfBirth'))
        obj.creditorDateOfBirth = ApiClient.convertToType(data['creditorDateOfBirth'], 'String');
      if (data.hasOwnProperty('creditorIdentificationType'))
        obj.creditorIdentificationType = ApiClient.convertToType(data['creditorIdentificationType'], 'String');
      if (data.hasOwnProperty('creditorIdentificationValue'))
        obj.creditorIdentificationValue = ApiClient.convertToType(data['creditorIdentificationValue'], 'String');
    }
    return obj;
  }
}

/**
 * Bank Identifier GBP - sort code  SEPA and currency cloud - BIC
 * @member {String} creditorBankIdentifier
 */
UpdatePayeeDetailsBindingModel.prototype.creditorBankIdentifier = undefined;

/**
 * Creditor Account number for UK Payments  SEPA and currency cloud IBAN
 * @member {String} creditorAccountIdentifier
 */
UpdatePayeeDetailsBindingModel.prototype.creditorAccountIdentifier = undefined;

/**
 * Alpha ISO-2 Country Code
 * @member {String} creditorCountryCode
 */
UpdatePayeeDetailsBindingModel.prototype.creditorCountryCode = undefined;

/**
 * Currency
 * @member {String} currency
 */
UpdatePayeeDetailsBindingModel.prototype.currency = undefined;

/**
 * Creditor Address Line 1
 * @member {String} creditorAddress1
 */
UpdatePayeeDetailsBindingModel.prototype.creditorAddress1 = undefined;

/**
 * Creditor Address Line 2
 * @member {String} creditorAddress2
 */
UpdatePayeeDetailsBindingModel.prototype.creditorAddress2 = undefined;

/**
 * Creditor City
 * @member {String} creditorcity
 */
UpdatePayeeDetailsBindingModel.prototype.creditorcity = undefined;

/**
 * Creditor Post Code
 * @member {String} creditorPostcode
 */
UpdatePayeeDetailsBindingModel.prototype.creditorPostcode = undefined;

/**
 * Creditor State
 * @member {String} creditorState
 */
UpdatePayeeDetailsBindingModel.prototype.creditorState = undefined;

/**
 * Creditor First Name
 * @member {String} creditorFirstName
 */
UpdatePayeeDetailsBindingModel.prototype.creditorFirstName = undefined;

/**
 * Creditor Last Name
 * @member {String} creditorLastName
 */
UpdatePayeeDetailsBindingModel.prototype.creditorLastName = undefined;

/**
 * @member {module:model/BankPaymentCreditorType} creditorType
 */
UpdatePayeeDetailsBindingModel.prototype.creditorType = undefined;

/**
 * Is Instant
 * @member {Boolean} isInstant
 */
UpdatePayeeDetailsBindingModel.prototype.isInstant = undefined;

/**
 * BankIdentifier for CAD payments
 * @member {String} bankIdentifier
 */
UpdatePayeeDetailsBindingModel.prototype.bankIdentifier = undefined;

/**
 * BankIdentifier2 for CAD payments
 * @member {String} bankIdentifier2
 */
UpdatePayeeDetailsBindingModel.prototype.bankIdentifier2 = undefined;

/**
 * Payment Scheme
 * @member {Number} paymentScheme
 */
UpdatePayeeDetailsBindingModel.prototype.paymentScheme = undefined;

/**
 * Creditor's date of birth, in \"yyyy-MM-dd\" format.
 * @member {String} creditorDateOfBirth
 */
UpdatePayeeDetailsBindingModel.prototype.creditorDateOfBirth = undefined;

/**
 * Creditor identification type. Values available: none, drivers_license, social_security_number, green_card, passport, visa, matricula_consular, registro_federal_de_contribuyentes, clave_unica_de_registro_de_poblacion, credential_de_elector, social_insurance_number, citizenship_papers, drivers_license_canadian, existing_credit_card_details, employer_identification_number, national_id, incorporation_number, others
 * @member {String} creditorIdentificationType
 */
UpdatePayeeDetailsBindingModel.prototype.creditorIdentificationType = undefined;

/**
 * Creditor identification Value
 * @member {String} creditorIdentificationValue
 */
UpdatePayeeDetailsBindingModel.prototype.creditorIdentificationValue = undefined;

