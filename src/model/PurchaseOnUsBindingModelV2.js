/*
 * Finac API
 * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.43
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The PurchaseOnUsBindingModelV2 model module.
 * @module model/PurchaseOnUsBindingModelV2
 * @version 2.0
 */
export class PurchaseOnUsBindingModelV2 {
  /**
   * Constructs a new <code>PurchaseOnUsBindingModelV2</code>.
   * @alias module:model/PurchaseOnUsBindingModelV2
   * @class
   * @param amount {Number} Transaction amount (in subunit i.e.: Penny)
   */
  constructor(amount) {
    this.amount = amount;
  }

  /**
   * Constructs a <code>PurchaseOnUsBindingModelV2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PurchaseOnUsBindingModelV2} obj Optional instance to populate.
   * @return {module:model/PurchaseOnUsBindingModelV2} The populated <code>PurchaseOnUsBindingModelV2</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PurchaseOnUsBindingModelV2();
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('currencyCode'))
        obj.currencyCode = ApiClient.convertToType(data['currencyCode'], 'String');
      if (data.hasOwnProperty('feeCode'))
        obj.feeCode = ApiClient.convertToType(data['feeCode'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('terminalOwner'))
        obj.terminalOwner = ApiClient.convertToType(data['terminalOwner'], 'String');
      if (data.hasOwnProperty('terminalLocation'))
        obj.terminalLocation = ApiClient.convertToType(data['terminalLocation'], 'String');
      if (data.hasOwnProperty('terminalId'))
        obj.terminalId = ApiClient.convertToType(data['terminalId'], 'String');
    }
    return obj;
  }
}

/**
 * Transaction amount (in subunit i.e.: Penny)
 * @member {Number} amount
 */
PurchaseOnUsBindingModelV2.prototype.amount = undefined;

/**
 * Currency code of amount.
 * @member {String} currencyCode
 */
PurchaseOnUsBindingModelV2.prototype.currencyCode = undefined;

/**
 * Fee code for calculating the fee amount.
 * @member {String} feeCode
 */
PurchaseOnUsBindingModelV2.prototype.feeCode = undefined;

/**
 * Transaction description.
 * @member {String} description
 */
PurchaseOnUsBindingModelV2.prototype.description = undefined;

/**
 * Transaction owner.
 * @member {String} terminalOwner
 */
PurchaseOnUsBindingModelV2.prototype.terminalOwner = undefined;

/**
 * Transaction location.
 * @member {String} terminalLocation
 */
PurchaseOnUsBindingModelV2.prototype.terminalLocation = undefined;

/**
 * Terminal Id
 * @member {String} terminalId
 */
PurchaseOnUsBindingModelV2.prototype.terminalId = undefined;

