/*
 * Finac API
 * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The MccBlockBindingModel model module.
 * @module model/MccBlockBindingModel
 * @version 2.0
 */
export class MccBlockBindingModel {
  /**
   * Constructs a new <code>MccBlockBindingModel</code>.
   * Request model for MCC block.
   * @alias module:model/MccBlockBindingModel
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>MccBlockBindingModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MccBlockBindingModel} obj Optional instance to populate.
   * @return {module:model/MccBlockBindingModel} The populated <code>MccBlockBindingModel</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MccBlockBindingModel();
      if (data.hasOwnProperty('mcc'))
        obj.mcc = ApiClient.convertToType(data['mcc'], 'String');
      if (data.hasOwnProperty('mccGroup'))
        obj.mccGroup = ApiClient.convertToType(data['mccGroup'], 'String');
      if (data.hasOwnProperty('applyToLinkedCards'))
        obj.applyToLinkedCards = ApiClient.convertToType(data['applyToLinkedCards'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Single Merchant Category Code to be blocked. Required if MccGroup is not filled.
 * @member {String} mcc
 */
MccBlockBindingModel.prototype.mcc = undefined;

/**
 * Group of MCCs that can be blocked simultaneously. Required if Mcc is not filled.
 * @member {String} mccGroup
 */
MccBlockBindingModel.prototype.mccGroup = undefined;

/**
 * Apply MCC to all linked cards on account or only for the Cardholder id provided.
 * @member {Boolean} applyToLinkedCards
 */
MccBlockBindingModel.prototype.applyToLinkedCards = undefined;

