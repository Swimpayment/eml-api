"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckLoadViewModelV2 = void 0;
var _ApiClient = require("../ApiClient");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * Finac API
                                                                                                                                                                                                                                                                                                                                                                                               * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 2.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.43
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The CheckLoadViewModelV2 model module.
 * @module model/CheckLoadViewModelV2
 * @version 2.0
 */
var CheckLoadViewModelV2 = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CheckLoadViewModelV2</code>.
   * @alias module:model/CheckLoadViewModelV2
   * @class
   */
  function CheckLoadViewModelV2() {
    _classCallCheck(this, CheckLoadViewModelV2);
  }

  /**
   * Constructs a <code>CheckLoadViewModelV2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CheckLoadViewModelV2} obj Optional instance to populate.
   * @return {module:model/CheckLoadViewModelV2} The populated <code>CheckLoadViewModelV2</code> instance.
   */
  _createClass(CheckLoadViewModelV2, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CheckLoadViewModelV2();
        if (data.hasOwnProperty('availableBalance')) obj.availableBalance = _ApiClient.ApiClient.convertToType(data['availableBalance'], 'Number');
        if (data.hasOwnProperty('maxLoadPerDay')) obj.maxLoadPerDay = _ApiClient.ApiClient.convertToType(data['maxLoadPerDay'], 'Number');
        if (data.hasOwnProperty('maxBalanceOnCard')) obj.maxBalanceOnCard = _ApiClient.ApiClient.convertToType(data['maxBalanceOnCard'], 'Number');
        if (data.hasOwnProperty('loadAmountAsToday')) obj.loadAmountAsToday = _ApiClient.ApiClient.convertToType(data['loadAmountAsToday'], 'Number');
        if (data.hasOwnProperty('yearlyLoad')) obj.yearlyLoad = _ApiClient.ApiClient.convertToType(data['yearlyLoad'], 'Number');
        if (data.hasOwnProperty('yearlyLoadLimit')) obj.yearlyLoadLimit = _ApiClient.ApiClient.convertToType(data['yearlyLoadLimit'], 'Number');
        if (data.hasOwnProperty('monthlyLoad')) obj.monthlyLoad = _ApiClient.ApiClient.convertToType(data['monthlyLoad'], 'Number');
        if (data.hasOwnProperty('monthlyLoadLimit')) obj.monthlyLoadLimit = _ApiClient.ApiClient.convertToType(data['monthlyLoadLimit'], 'Number');
        if (data.hasOwnProperty('maxRemainingLoad')) obj.maxRemainingLoad = _ApiClient.ApiClient.convertToType(data['maxRemainingLoad'], 'Number');
        if (data.hasOwnProperty('loadTriesAsToday')) obj.loadTriesAsToday = _ApiClient.ApiClient.convertToType(data['loadTriesAsToday'], 'Number');
        if (data.hasOwnProperty('maxLoadTriesPerDay')) obj.maxLoadTriesPerDay = _ApiClient.ApiClient.convertToType(data['maxLoadTriesPerDay'], 'Number');
        if (data.hasOwnProperty('remainingTries')) obj.remainingTries = _ApiClient.ApiClient.convertToType(data['remainingTries'], 'Number');
      }
      return obj;
    }
  }]);
  return CheckLoadViewModelV2;
}();
/**
 * Available balance on card
 * @member {Number} availableBalance
 */
exports.CheckLoadViewModelV2 = CheckLoadViewModelV2;
CheckLoadViewModelV2.prototype.availableBalance = undefined;

/**
 * Maximum loads per day
 * @member {Number} maxLoadPerDay
 */
CheckLoadViewModelV2.prototype.maxLoadPerDay = undefined;

/**
 * Maximum balance that can be loaded to card
 * @member {Number} maxBalanceOnCard
 */
CheckLoadViewModelV2.prototype.maxBalanceOnCard = undefined;

/**
 * Total loaded amount today
 * @member {Number} loadAmountAsToday
 */
CheckLoadViewModelV2.prototype.loadAmountAsToday = undefined;

/**
 * Total load in a year
 * @member {Number} yearlyLoad
 */
CheckLoadViewModelV2.prototype.yearlyLoad = undefined;

/**
 * Yearly load limit
 * @member {Number} yearlyLoadLimit
 */
CheckLoadViewModelV2.prototype.yearlyLoadLimit = undefined;

/**
 * Total load in a month
 * @member {Number} monthlyLoad
 */
CheckLoadViewModelV2.prototype.monthlyLoad = undefined;

/**
 * Monthly load limit
 * @member {Number} monthlyLoadLimit
 */
CheckLoadViewModelV2.prototype.monthlyLoadLimit = undefined;

/**
 * Maximum remaining load possible
 * @member {Number} maxRemainingLoad
 */
CheckLoadViewModelV2.prototype.maxRemainingLoad = undefined;

/**
 * The load tries today
 * @member {Number} loadTriesAsToday
 */
CheckLoadViewModelV2.prototype.loadTriesAsToday = undefined;

/**
 * Maximum load tries limit per day
 * @member {Number} maxLoadTriesPerDay
 */
CheckLoadViewModelV2.prototype.maxLoadTriesPerDay = undefined;

/**
 * Remaining load tries possible
 * @member {Number} remainingTries
 */
CheckLoadViewModelV2.prototype.remainingTries = undefined;