"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BankPaymentTransactionViewModelV2 = void 0;
var _ApiClient = require("../ApiClient");
var _BankPaymentDirection = require("./BankPaymentDirection");
var _BankPaymentProvider = require("./BankPaymentProvider");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * Finac API
                                                                                                                                                                                                                                                                                                                                                                                               * <b>Version Notes:- <br/>• All amounts fields in requests and responses have been changed from decimal to int64(cents). This means that 10.00 in version 1, is 1000 in version 2.<br/>• ThreeDS endpoints have been added to this version. These will replace the KBA endpoints from version 1.</br>• AccountId endpoint has changed HTTP verb from GET to POST, furthermore additional cardholder details need to be provided as part of the HTTP body.</b>
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 2.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.43
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The BankPaymentTransactionViewModelV2 model module.
 * @module model/BankPaymentTransactionViewModelV2
 * @version 2.0
 */
var BankPaymentTransactionViewModelV2 = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>BankPaymentTransactionViewModelV2</code>.
   * @alias module:model/BankPaymentTransactionViewModelV2
   * @class
   */
  function BankPaymentTransactionViewModelV2() {
    _classCallCheck(this, BankPaymentTransactionViewModelV2);
  }

  /**
   * Constructs a <code>BankPaymentTransactionViewModelV2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BankPaymentTransactionViewModelV2} obj Optional instance to populate.
   * @return {module:model/BankPaymentTransactionViewModelV2} The populated <code>BankPaymentTransactionViewModelV2</code> instance.
   */
  _createClass(BankPaymentTransactionViewModelV2, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new BankPaymentTransactionViewModelV2();
        if (data.hasOwnProperty('id')) obj.id = _ApiClient.ApiClient.convertToType(data['id'], 'Number');
        if (data.hasOwnProperty('transactionId')) obj.transactionId = _ApiClient.ApiClient.convertToType(data['transactionId'], 'String');
        if (data.hasOwnProperty('amount')) obj.amount = _ApiClient.ApiClient.convertToType(data['amount'], 'Number');
        if (data.hasOwnProperty('cardholderID')) obj.cardholderID = _ApiClient.ApiClient.convertToType(data['cardholderID'], 'String');
        if (data.hasOwnProperty('debtorBankIndentifier')) obj.debtorBankIndentifier = _ApiClient.ApiClient.convertToType(data['debtorBankIndentifier'], 'String');
        if (data.hasOwnProperty('debtorAccountIdentifier')) obj.debtorAccountIdentifier = _ApiClient.ApiClient.convertToType(data['debtorAccountIdentifier'], 'String');
        if (data.hasOwnProperty('debtorFullName')) obj.debtorFullName = _ApiClient.ApiClient.convertToType(data['debtorFullName'], 'String');
        if (data.hasOwnProperty('debtorFullAddress')) obj.debtorFullAddress = _ApiClient.ApiClient.convertToType(data['debtorFullAddress'], 'String');
        if (data.hasOwnProperty('debtorCountryCode')) obj.debtorCountryCode = _ApiClient.ApiClient.convertToType(data['debtorCountryCode'], 'String');
        if (data.hasOwnProperty('creditorBankIdentifier')) obj.creditorBankIdentifier = _ApiClient.ApiClient.convertToType(data['creditorBankIdentifier'], 'String');
        if (data.hasOwnProperty('creditorAccountIdentifier')) obj.creditorAccountIdentifier = _ApiClient.ApiClient.convertToType(data['creditorAccountIdentifier'], 'String');
        if (data.hasOwnProperty('creditorFullName')) obj.creditorFullName = _ApiClient.ApiClient.convertToType(data['creditorFullName'], 'String');
        if (data.hasOwnProperty('creditorFullAddress')) obj.creditorFullAddress = _ApiClient.ApiClient.convertToType(data['creditorFullAddress'], 'String');
        if (data.hasOwnProperty('creditorCountryCode')) obj.creditorCountryCode = _ApiClient.ApiClient.convertToType(data['creditorCountryCode'], 'String');
        if (data.hasOwnProperty('reference')) obj.reference = _ApiClient.ApiClient.convertToType(data['reference'], 'String');
        if (data.hasOwnProperty('dateTimeEntered')) obj.dateTimeEntered = _ApiClient.ApiClient.convertToType(data['dateTimeEntered'], 'String');
        if (data.hasOwnProperty('inwardOutward')) obj.inwardOutward = _BankPaymentDirection.BankPaymentDirection.constructFromObject(data['inwardOutward']);
        if (data.hasOwnProperty('processorType')) obj.processorType = _BankPaymentProvider.BankPaymentProvider.constructFromObject(data['processorType']);
        if (data.hasOwnProperty('paymentStatus')) obj.paymentStatus = _ApiClient.ApiClient.convertToType(data['paymentStatus'], 'String');
        if (data.hasOwnProperty('userDefinedFields')) obj.userDefinedFields = _ApiClient.ApiClient.convertToType(data['userDefinedFields'], {
          'String': 'String'
        });
      }
      return obj;
    }
  }]);
  return BankPaymentTransactionViewModelV2;
}();
/**
 * @member {Number} id
 */
exports.BankPaymentTransactionViewModelV2 = BankPaymentTransactionViewModelV2;
BankPaymentTransactionViewModelV2.prototype.id = undefined;

/**
 * @member {String} transactionId
 */
BankPaymentTransactionViewModelV2.prototype.transactionId = undefined;

/**
 * @member {Number} amount
 */
BankPaymentTransactionViewModelV2.prototype.amount = undefined;

/**
 * @member {String} cardholderID
 */
BankPaymentTransactionViewModelV2.prototype.cardholderID = undefined;

/**
 * @member {String} debtorBankIndentifier
 */
BankPaymentTransactionViewModelV2.prototype.debtorBankIndentifier = undefined;

/**
 * @member {String} debtorAccountIdentifier
 */
BankPaymentTransactionViewModelV2.prototype.debtorAccountIdentifier = undefined;

/**
 * @member {String} debtorFullName
 */
BankPaymentTransactionViewModelV2.prototype.debtorFullName = undefined;

/**
 * @member {String} debtorFullAddress
 */
BankPaymentTransactionViewModelV2.prototype.debtorFullAddress = undefined;

/**
 * @member {String} debtorCountryCode
 */
BankPaymentTransactionViewModelV2.prototype.debtorCountryCode = undefined;

/**
 * @member {String} creditorBankIdentifier
 */
BankPaymentTransactionViewModelV2.prototype.creditorBankIdentifier = undefined;

/**
 * @member {String} creditorAccountIdentifier
 */
BankPaymentTransactionViewModelV2.prototype.creditorAccountIdentifier = undefined;

/**
 * @member {String} creditorFullName
 */
BankPaymentTransactionViewModelV2.prototype.creditorFullName = undefined;

/**
 * @member {String} creditorFullAddress
 */
BankPaymentTransactionViewModelV2.prototype.creditorFullAddress = undefined;

/**
 * @member {String} creditorCountryCode
 */
BankPaymentTransactionViewModelV2.prototype.creditorCountryCode = undefined;

/**
 * @member {String} reference
 */
BankPaymentTransactionViewModelV2.prototype.reference = undefined;

/**
 * @member {String} dateTimeEntered
 */
BankPaymentTransactionViewModelV2.prototype.dateTimeEntered = undefined;

/**
 * @member {module:model/BankPaymentDirection} inwardOutward
 */
BankPaymentTransactionViewModelV2.prototype.inwardOutward = undefined;

/**
 * @member {module:model/BankPaymentProvider} processorType
 */
BankPaymentTransactionViewModelV2.prototype.processorType = undefined;

/**
 * @member {String} paymentStatus
 */
BankPaymentTransactionViewModelV2.prototype.paymentStatus = undefined;

/**
 * @member {Object.<String, String>} userDefinedFields
 */
BankPaymentTransactionViewModelV2.prototype.userDefinedFields = undefined;